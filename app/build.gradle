plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf" version "$protobuf_gradle_version"
    id "androidx.navigation.safeargs.kotlin"
    id "kotlin-parcelize"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    buildFeatures {
        dataBinding true
    }

    defaultConfig {
        applicationId "dev.atahabaki.wordbook"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 2
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        pickFirsts = [
                "META-INF/AL2.0",
                "META-INF/LGPL2.1"
        ]
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_version"
    // Appcompat, Material, and ConstraintLayout
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    // Flexbox
    implementation "com.google.android.flexbox:flexbox:$flexbox_version"
    // Room
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // DI
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    // Fragment
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    // Lifecycle, LiveData, ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // DataStore
    implementation "androidx.datastore:datastore:$datastore_version"
    implementation  "com.google.protobuf:protobuf-javalite:$protoc_version"
    // Unit Tests...
    testImplementation "junit:junit:4.13.2"
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'com.google.truth:truth:1.1.3'
    // Instrumentation Tests...
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "com.google.truth:truth:1.1.3"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protoc_version"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}